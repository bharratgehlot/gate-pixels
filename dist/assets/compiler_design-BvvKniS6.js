const e=[{id:1,type:"MSQ",question:"Which of the following is/are Bottom-Up Parser(s)?",note:null,options:["Shift-reduce Parser","Predictive Parser","LL(1) Parser","LR Parser"],correctAnswers:["A","D"],marks:1,negativeMarks:0,image:null,subject:"Compiler Design"},{id:2,type:"NAT",question:"The value of the expression 3+1+5*2 / 7+2−4−7−6 / 2 as per the given operator precedence and associativity rules is __________",note:null,options:[],correctAnswerRange:{min:6,max:6},marks:1,negativeMarks:0,image:"sub_wise\\compiler_design\\paper_1\\ques_2.jpg",subject:"Compiler Design"},{id:3,type:"MCQ",question:"Given 'MMLK' as the input, which one of the following options is the CORRECT value computed by the SDD (in the attribute S.val)?",note:null,options:["45","50","55","65"],correctAnswers:["A"],marks:2,negativeMarks:.66,image:"sub_wise\\compiler_design\\paper_1\\ques_3.jpg",subject:"Compiler Design"},{id:4,type:"MCQ",question:`Consider the following grammar 𝐺, with 𝑆 as the start symbol. The grammar 𝐺 has three incomplete productions denoted by (1), (2), and (3). 

Which one of the following options CORRECTLY fills in the incomplete productions for the given grammar?`,note:null,options:["(1) S→Rf (2) T→ε (3) R→cTR","(1) S→fR (2) T→ε (3) R→cTR","(1) S→fR (2) T→cT (3) R→cR","(1) S→Rf (2) T→cT (3) R→cR"],correctAnswers:["A"],marks:2,negativeMarks:.66,image:"sub_wise\\compiler_design\\paper_1\\ques_4.jpg",subject:"Compiler Design"},{id:5,type:"MCQ",question:"Consider the following pseudo-code. Which one of the following options CORRECTLY specifies the number of basic blocks and the number of instructions in the largest basic block, respectively, for the given pseudo-code?",note:null,options:["6 and 6","6 and 7","7 and 7","7 and 6"],correctAnswers:["D"],marks:2,negativeMarks:.66,image:"sub_wise\\compiler_design\\paper_1\\ques_5.jpg",subject:"Compiler Design"},{id:6,type:"MCQ",question:`Consider the following two sets: 
Which one of the following options is the CORRECT match from Set X to Set Y?`,note:null,options:["P – 4; Q – 1; R – 3; S – 2","P – 2; Q – 3; R – 1; S – 4","P – 2; Q – 1; R – 3; S – 4","P – 4; Q – 3; R – 2; S – 1"],correctAnswers:["B"],marks:1,negativeMarks:.33,image:"sub_wise\\compiler_design\\paper_1\\ques_6.jpg",subject:"Compiler Design"},{id:7,type:"MSQ",question:"Which of the following statements is/are FALSE?",note:null,options:["An attribute grammar is a syntax-directed definition (SDD) in which the functions in the semantic rules have no side effects","The attributes in a L-attributed definition cannot always be evaluated in a depth-first order","Synthesized attributes can be evaluated by a bottom-up parser as the input is parsed","All L-attributed definitions based on LR(1) grammar can be evaluated using a bottom-up parsing strategy"],correctAnswers:["B","D"],marks:1,negativeMarks:0,image:null,subject:"Compiler Design"},{id:8,type:"MCQ",question:`Consider the following context-free grammar where the start symbol is S and the set of terminals is {a,b,c,d}:
S→AaAb | BbBa
A→cS | ε
B→dS | ε
The following is a partially-filled LL(1) parsing table. Which one of the following options represents the CORRECT combination for the numbered cells in the parsing table? `,note:"Note: In the options, “blank” denotes that the corresponding cell is empty.",options:["(1) S→AaAb (2) S→BbBa (3) A→ε (4) B→ε","(1) S→BbBa (2) S→AaAb (3) A→ε (4) B→ε","(1) S→AaAb (2) S→BbBa (3) blank (4) blank","(1) S→BbBa (2) S→AaAb (3) blank (4) blank"],correctAnswers:["A"],marks:2,negativeMarks:.66,image:"sub_wise\\compiler_design\\paper_1\\ques_8.jpg",subject:"Compiler Design"},{id:9,type:"MCQ",question:"Consider the following expression: x[i] = (p + r)* - s[i] + u / w. The following sequence shows the list of triples representing the given expression, with entries missing for triples (1), (3), and (6). Which one of the following options fills in the missing entries CORRECTLY?",note:null,options:["(1) =[] s i (3) * (0) (2) (6) []= x i","(1) []= s i (3) – (0) (2) (6) =[] x (5)","(1) =[] s i (3) * (0) (2) (6) []= x (5)","(1) []= s i (3) – (0) (2) (6) =[] x i"],correctAnswers:["A"],marks:2,negativeMarks:.66,image:"sub_wise\\compiler_design\\paper_1\\ques_9.jpg",subject:"Compiler Design"},{id:10,type:"NAT",question:`Consider the following augmented grammar, which is to be parsed with an SLR parser. The set of terminals is {a, b, c, d, #, @}:
S' → S
S → SS | Aa | bAc | Bc | bBa
A → d#
B → @
Let I0 = CLOSURE({S' → •S}). The number of items in the set GOTO(I0, S) is _________.`,note:null,options:[],correctAnswerRange:{min:9,max:9},marks:2,negativeMarks:0,image:null,subject:"Compiler Design"}];export{e as default};
